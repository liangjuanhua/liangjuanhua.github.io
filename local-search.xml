<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>WireGuard实现异地组网</title>
    <link href="/2025/04/16/WireGuard%E5%AE%9E%E7%8E%B0%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/"/>
    <url>/2025/04/16/WireGuard%E5%AE%9E%E7%8E%B0%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<p> WireGuard是一个易于配置、快速、安全的基于UDP协议的开源VPN软件。Wireguard具有自定义配置路由转发的能力，所以可以被用来在多个不同地域将设备所在的内网网络通过路由转发的方式串通起来，组建一张属于自己的大内网！有时候，我们想将本地计算机上提供的服务与小伙伴分享，但是我们既没有公网IP，又希望能够有足够的安全性，避免使其暴露在公网上。因此，我们基于Wireguard这一项最基本的特性，设计和实现了一套异地组网方案。我们基于Wireguard这一项最基本的特性，设计和实现了一套异地组网方案。这里给大家介绍两种部署方式，以供大家选择。</p><h2 id="一、WireGuard-基本概念"><a href="#一、WireGuard-基本概念" class="headerlink" title="一、WireGuard 基本概念"></a>一、WireGuard 基本概念</h2><p>首先使用 WireGuard 你需要在<a href="https://www.moyann.com/tag/%E7%B3%BB%E7%BB%9F/">系统</a>中创建一块虚拟网卡，并配置好这个虚拟网卡的 IP <a href="https://www.moyann.com/tag/%E5%9C%B0%E5%9D%80/">地址</a>，掩码，网关不需要配置（可以使用 wg-quick@ 自动化）</p><p>然后你使用 WireGuard <a href="https://www.moyann.com/tag/%E8%BF%9E%E6%8E%A5/">连接</a>另一台设备，两台互相 peer 对方并验证各自的公钥私钥是否正确，全部正确后成功建立 peer（可以使用 wg-quick@ 自动化）</p><p>建立成功后，所有前往虚拟网卡的<a href="https://www.moyann.com/tag/%E6%B5%81%E9%87%8F/">流量</a>都将被重新封装后发往另一台设备，由另一台设备解封装然后得到数据报文并在内部查找路由并匹配报文目的地。（可以使用 wg-quick@ 自动化）</p><p>以上为建立一个 WireGuard VPN 链接的过程，建立好后，A 设备与 B 设备互相需要保证虚拟网卡的 IP 在相同网络位的地址段中，并且这个地址段被 WireGuard 的配置<a href="https://www.moyann.com/tag/%E6%96%87%E4%BB%B6/">文件</a> AllowedIPs 所允许通过</p><p>如果你试图从 A 设备访问 B 设备的对端子网，你需要在 A 设备上配置系统路由，将系统三层网络的路由目的地指向对端虚拟 IP 地址，出接口为虚拟网卡，并且这个地址段必须被 WireGuard 的配置文件 AllowedIPs 所允许通过</p><p>最后，在 WireGuard 中的所有数据报文，都采用 UDP 的方式发送。</p><h2 id="二、安装-WireGuard"><a href="#二、安装-WireGuard" class="headerlink" title="二、安装 WireGuard"></a>二、安装 WireGuard</h2><p>1.安装Wireguard</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#root权限</span><br><span class="hljs-built_in">sudo</span> -i<br><br><span class="hljs-comment">#安装wireguard软件</span><br>apt install wireguard resolvconf -y<br><br><span class="hljs-comment">#开启IP转发</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.ipv4.ip_forward = 1&quot;</span> &gt;&gt; /etc/sysctl.conf<br>sysctl -p<br></code></pre></td></tr></table></figure><p>2.修改目录权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/wireguard/<br><span class="hljs-built_in">chmod</span> 0777 /etc/wireguard<br><br><span class="hljs-comment">#调整目录默认权限</span><br><span class="hljs-built_in">umask</span> 077<br></code></pre></td></tr></table></figure><p>3.生成服务器密钥</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#生成私钥</span><br>wg genkey &gt; <span class="hljs-keyword">server</span>.key<br><br><span class="hljs-meta">#通过私钥生成公钥</span><br>wg pubkey &lt; <span class="hljs-keyword">server</span>.key &gt; <span class="hljs-keyword">server</span>.key.pub<br></code></pre></td></tr></table></figure><p>4.生成客户端密钥</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment">#生成私钥</span><br>wg genkey &gt; client1.key<br><br><span class="hljs-comment">#通过私钥生成公钥</span><br>wg pubkey <span class="hljs-variable">&lt; client1.key &gt;</span> client1.key.pub<br></code></pre></td></tr></table></figure><p>5.查看密钥</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">cat server.<span class="hljs-keyword">key</span> <span class="hljs-variable">&amp;&amp;</span> cat server.<span class="hljs-keyword">key</span>.pub <span class="hljs-variable">&amp;&amp;</span> cat client1.<span class="hljs-keyword">key</span> <span class="hljs-variable">&amp;&amp;</span> cat client1.<span class="hljs-keyword">key</span>.pub<br></code></pre></td></tr></table></figure><p>6.创建服务端配置文件</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs 1c">echo <span class="hljs-string">&quot;</span><br>[Interface]<br>PrivateKey <span class="hljs-punctuation">=</span> $<span class="hljs-punctuation">(</span>cat server.key<span class="hljs-punctuation">)</span> <span class="hljs-meta"># 填写本机的privatekey 内容</span><br>Address <span class="hljs-punctuation">=</span> <span class="hljs-number">10.0</span>.<span class="hljs-number">8.1</span> <span class="hljs-meta">#本机虚拟局域网IP</span><br><br>PostUp   <span class="hljs-punctuation">=</span> iptables <span class="hljs-punctuation">-</span>A FORWARD <span class="hljs-punctuation">-</span>i wg0 <span class="hljs-punctuation">-</span>j ACCEPT<span class="hljs-punctuation">;</span> iptables <span class="hljs-punctuation">-</span>A FORWARD <span class="hljs-punctuation">-</span>o wg0 <span class="hljs-punctuation">-</span>j ACCEPT<span class="hljs-punctuation">;</span> iptables <span class="hljs-punctuation">-</span>t nat <span class="hljs-punctuation">-</span>A POSTROUTING <span class="hljs-punctuation">-</span>o eth0 <span class="hljs-punctuation">-</span>j MASQUERADE<br>PostDown <span class="hljs-punctuation">=</span> iptables <span class="hljs-punctuation">-</span>D FORWARD <span class="hljs-punctuation">-</span>i wg0 <span class="hljs-punctuation">-</span>j ACCEPT<span class="hljs-punctuation">;</span> iptables <span class="hljs-punctuation">-</span>D FORWARD <span class="hljs-punctuation">-</span>o wg0 <span class="hljs-punctuation">-</span>j ACCEPT<span class="hljs-punctuation">;</span> iptables <span class="hljs-punctuation">-</span>t nat <span class="hljs-punctuation">-</span>D POSTROUTING <span class="hljs-punctuation">-</span>o eth0 <span class="hljs-punctuation">-</span>j MASQUERADE<br><span class="hljs-meta">#注意eth0需要为本机网卡名称</span><br><br>ListenPort <span class="hljs-punctuation">=</span> <span class="hljs-number">50814</span> <span class="hljs-meta"># 监听端口</span><br>DNS <span class="hljs-punctuation">=</span> <span class="hljs-number">8.8</span>.<span class="hljs-number">8.8</span><br>MTU <span class="hljs-punctuation">=</span> <span class="hljs-number">1420</span><br>[Peer]<br>PublicKey <span class="hljs-punctuation">=</span>  $<span class="hljs-punctuation">(</span>cat client1.key.pub<span class="hljs-punctuation">)</span>  <span class="hljs-meta">#自动client1的公钥</span><br>AllowedIPs <span class="hljs-punctuation">=</span> <span class="hljs-number">10.0</span>.<span class="hljs-number">8.10</span>/<span class="hljs-number">32</span> <span class="hljs-meta">#客户端所使用的IP&quot; &gt; wg0.conf</span><br></code></pre></td></tr></table></figure><p>7.启动服务</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#设置开机自启动</span><br>systemctl enable wg-quick<span class="hljs-variable">@wg0</span><br><br><span class="hljs-comment">#启动wg0</span><br>wg-quick up wg0<br><br><span class="hljs-comment">#关闭wg0</span><br>wg-quick down wg0<br><br><span class="hljs-comment">#如果启动失败只有有wg0网卡，需删除再次启动</span><br>ip <span class="hljs-keyword">link</span> <span class="hljs-keyword">delete</span> wg0<br></code></pre></td></tr></table></figure><p>8.配置客户端</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">Windows下载地址：https://www.wireguard.com/install/</span><br><br><span class="hljs-comment">#客户端配置</span><br>[Interface]<br>PrivateKey = 6M8HEZioew+vR3i53sPc64Vg40YsuMzh4vI1Lkc88Xo= <span class="hljs-comment">#此处为client1的私钥</span><br>Address = 10.0.8.10 <span class="hljs-comment">#此处为peer规定的客户端IP</span><br>MTU = 1500<br><br>[Peer]<br>PublicKey = Tt5WEa0Vycf4F+TTjR2TAHDfa2onhh+tY8YOIT3cKjI= <span class="hljs-comment">#此处为server的公钥</span><br>AllowedIPs = 10.0.8.0/24 <span class="hljs-comment">#此处为允许的服务器IP</span><br>Endpoint = 114.132.56.178:50814 <span class="hljs-comment">#服务器对端IP+端口</span><br></code></pre></td></tr></table></figure><p>9.连接</p><p><img src="https://gitee.com/ljh00928/csdn/raw/master/img/4658e56cf5dc493194931b981480e24a.png" alt="4658e56cf5dc493194931b981480e24a.png">编辑这时候很明显我电脑和服务器地址不在一个网段，但是我也可以成功访问公司网络咯~</p><p><img src="https://gitee.com/ljh00928/csdn/raw/master/img/09870e03be6c457aaca5f71da26dc80c.png" alt="09870e03be6c457aaca5f71da26dc80c.png"></p><h2 id="三、docker部署"><a href="#三、docker部署" class="headerlink" title="三、docker部署"></a>三、docker部署</h2><p>这种方式简单，前提是需要安装docker。关于docker部署，cicd专栏-kubeadm部署k8s一篇博文中有写到。感兴趣小伙伴可以参考</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -d <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --name=wg-easy <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -e WG_HOST=<span class="hljs-number">123.123.123.123</span> (🚨这里输入服务器的公网IP) <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -e PASSWORD=passwd123 (🚨这里输入你的密码) <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -e WG_DEFAULT_ADDRESS=<span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>.x （🚨默认IP地址）<span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -e WG_DEFAULT_DNS=<span class="hljs-number">114.114.114.114</span> （🚨默认DNS）<span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -e WG_ALLOWED_IPS=<span class="hljs-number">10.0.8.0</span>/<span class="hljs-number">24</span> （🚨允许连接的IP段）<span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -e WG_PERSISTENT_KEEPALIVE=<span class="hljs-number">25</span> （🚨重连间隔）<span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -v ~/.wg-easy:/etc/wireguard <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -p <span class="hljs-number">51820</span>:<span class="hljs-number">51820</span>/udp <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  -p <span class="hljs-number">51821</span>:<span class="hljs-number">51821</span>/tcp <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --cap-add=NET_ADMIN <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --cap-add=SYS_MODULE <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --sysctl=<span class="hljs-string">&quot;net.ipv4.conf.all.src_valid_mark=1&quot;</span> <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --sysctl=<span class="hljs-string">&quot;net.ipv4.ip_forward=1&quot;</span> <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --restart unless-stopped <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  weejewel/wg-easy<br></code></pre></td></tr></table></figure><p>容器更新命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stop wg-easy<br>docker <span class="hljs-built_in">rm</span> wg-easy<br>docker pull weejewel/wg-easy<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>网络篇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络篇</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
